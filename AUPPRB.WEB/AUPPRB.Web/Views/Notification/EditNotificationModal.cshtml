@model AUPPRB.Models.ViewModels.Notifications.NotificationViewModel

@{
    Layout = null;
}

<style>
    .mainStyle {
    width:400px;
    }
</style>

<div class="modal fade" id="editNotificationModal" tabindex="-1" role="dialog" aria-labelledby="editNotificationLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Закрыть</span></button>
                <h3 class="modal-title" id="editNotificationLabel">Добавление заметки</h3>
            </div>
            @using (Ajax.BeginForm("EditNotification", "Notification",
                    new AjaxOptions
                    {
                        HttpMethod = "Post",
                        //OnBegin = "Begin",
                        //OnComplete = "Complete",
                        OnSuccess = "SuccessResult"
                    },
                    new { name = "EditNotificationForm", id = "EditNotificationForm", style = "margin: 0", @class = "form-horizontal" }))
            {

                <div class="modal-body">

                    <table style="padding-left: 10px;">

                        @Html.ValidationSummary(false)

                        @Html.HiddenFor(p => p.NotificationId)

                        <tr>
                            <td>
                                @Html.LabelFor(p => p.NotificationTypeId): 
                            </td>
                            <td>
                                @Html.DropDownListFor(p => p.NotificationTypeId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control mainStyle" })
                            </td>
                        </tr>

                        <tr>
                            <td>@Html.LabelFor(p => p.NotificationDate): </td>
                            <td>@Html.TextBoxFor(p => p.NotificationDate, new { @class = "dateInput form-control mainStyle" })</td>
                        </tr>

                        <tr>
                            <td>@Html.LabelFor(p => p.NotificationTimeId): </td>
                            <td>@Html.DropDownListFor(p => p.NotificationTimeId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control mainStyle" })</td>
                        </tr>

                        <tr>
                            <td>    @Html.LabelFor(p => p.NotificationText): </td>
                            <td>   @Html.TextAreaFor(p => p.NotificationText, new { @class = "form-control mainStyle" })</td>
                        </tr>

                    </table>


                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary" id="sendData">Сохранить</button>
                    <button type="button" class="btn btn-default" id="cancel" data-dismiss="modal">Отмена</button>
                </div>
            }
        </div>
    </div>
</div>
<script>

    $(function () {

        FillDropdownDataAsync('@Url.Action("GetNotificationTypes")', null, $("#NotificationTypeId"), "Выберите тип ", false);

        FillDropdownDataAsync('@Url.Action("GetNotificationTimes")', null, $("#NotificationTimeId"), "Выберите время", false);

        $("#EditNotificationForm .form-group :first-child").width('10%');
        $("#EditNotificationForm .form-group :last-child").width(500);

        $("#sendData").click(function () {
            //custom form cleaner
            clearForm($("#EditNotificationForm"));
        });
    });

    function initNotificationWindow(time, date, id) {

        //clear form
        $("#EditNotificationForm").trigger('reset');
        clearForm($("#EditNotificationForm"));
        $(".input-validation-error").removeClass("input-validation-error");

        //removePopover
        try {
            $('.popover').popover('hide');
        } catch (e) {

        }

        if (id != null) {

            $.ajax({
                url: '@Url.Action("GetNotification")',
                type: 'post',
                data: { id: id },
                success: function (data) {

                    var notification = data.notification;

                    $("#NotificationTypeId").val(notification.NotificationTypeId);
                    $("#NotificationDate").val(notification.NotificationDate);
                    $("#NotificationTimeId").val(notification.NotificationTimeId);
                    $("#NotificationId").val(notification.NotificationId);
                    $("#NotificationText").val(notification.NotificationText);

                    $('#editNotificationModal').modal('show');
                },

            });

        } else {
            $("#NotificationDate").val(date);


            $("#NotificationTimeId option").filter(function () {
                return this.text == time;
            }).attr('selected', true);

            $("#NotificationId").val(0);
            $('#editNotificationModal').modal('show');
        }
    }

    function SuccessResult(response) {
        if (response && response.success) {
            $('#editNotificationModal').modal('hide');


            if (response.callbackFunction != null) {
                var fn = window[response.callbackFunction];
                fn();
            }
        }

        if (response && !response.success) {
            displayErrors($("#EditNotificationForm"), response.message);
        }

        if (!response)
            console.log("Неизвестная ошибка 'SuccessResult'");
    }

    function RemoveNotice(noticeId) {

        alertify.confirm("Вы действительно хотите удалить эту заметку?", function (e) {
            if (e) {
                var url = '@Url.Action("DeleteNotification")';
                $.post(url, { id: noticeId }, function (response) {


                    if (response && response.success) {
                        $('#editNotificationModal').modal('hide');

                        //removePopover
                        try {
                            $('.popover').popover('hide');
                        } catch (e) {

                        }

                        if (response.callbackFunction != null) {
                            var fn = window[response.callbackFunction];
                            fn();
                        }
                    }

                    if (response && !response.success) {
                        displayErrors($("#EditNotificationForm"), response.message);
                        alertify.log("Ошибка удаления", response.message);
                    }

                    if (!response)
                        console.log("Неизвестная ошибка 'SuccessResult'");



                });
            }
        });
    }

</script>
